import { activeId } from '$lib/stores/categoryStore';
import { redirect } from '@sveltejs/kit';
import type { PageLoad } from './$types';

let activeCategory: number;
activeId.subscribe((value) => {
	activeCategory = value;
});

function filterProducts(
	data: {
		id: number;
		barcode: string | null;
		sku: string | null;
		name: string;
		m_storageonhand: { warehouse_id: number; qtyonhand: number }[] | null;
		m_productprice: { m_pricelist_version_id: number; pricestd: number }[] | null;
		m_product_po: { c_bpartner_id: number; pricelist: number }[] | null;
	}[]
) {
	const filteredProducts = [];

	// Iterate through each product in the data object
	for (const product of data) {
		const { id, barcode, sku, name, m_storageonhand, m_productprice, m_product_po } = product;

		// Filter the m_storageonhand array to find the object with warehouse_id = 5
		const filteredStorage = m_storageonhand?.filter(
			(storage: { warehouse_id: number }) => storage.warehouse_id === 5
		);

		// Filter the m_productprice array to find the object with m_pricelist_version_id = 13
		const filteredPrice = m_productprice?.filter(
			(price: { m_pricelist_version_id: number }) => price.m_pricelist_version_id === 13
		);

		// Filter the m_product_po array to find the object with c_bpartner_id = 2
		const filteredPO = m_product_po?.filter(
			(po: { c_bpartner_id: number }) => po.c_bpartner_id === 2
		);

		// If all the filtered arrays have at least one object, create a new object with the desired properties
		if (filteredStorage?.length && filteredPrice?.length && filteredPO?.length) {
			const newProduct = {
				id,
				barcode,
				sku,
				name,
				qtyonhand: filteredStorage[0].qtyonhand,
				pricestd: filteredPrice[0].pricestd,
				pricelist: filteredPO[0].pricelist
			};

			// Add the new object to the filteredProducts array
			filteredProducts.push(newProduct);
		}
	}

	return filteredProducts;
}

export const load = (async ({ parent, depends }) => {
	const { session, supabase } = await parent();
	if (!session) {
		throw redirect(303, '/');
	}
	const { data } = await supabase
		.from('m_product')
		.select(
			'id,barcode,sku,name,m_storageonhand(warehouse_id,qtyonhand),m_productprice(m_pricelist_version_id,pricestd),m_product_po(c_bpartner_id,pricelist)'
		)
		.order('name')
		.eq('m_product_category_id', activeCategory);
	//.in('m_storageonhand.warehouse_id', [2, 5])
	//.in('m_productprice.m_pricelist_version_id', [5, 13])
	//.order('m_pricelist_version_id', { foreignTable: 'm_productprice' });
	let products: unknown;
	if (data) {
		products = filterProducts(data);
	}
	console.log('m_product', products);
	depends('catalog:products');

	return { products };
}) satisfies PageLoad;
